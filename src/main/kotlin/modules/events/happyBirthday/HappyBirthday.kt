package modules.events.happyBirthday


import api.VkPlatform
import chatIds
import mainChatPeerId
import modules.Active
import modules.events.Event
import modules.events.Time
import java.util.*

@Active
class HappyBirthday : Event {
    override val schedule = listOf(Time(9, 0))
    override val name = "Birthday today"

    override fun call() {
        val cal = Calendar.getInstance()
        val profiles = VkPlatform.getChatMembers(mainChatPeerId, listOf("bdate", "domain"))
            ?: throw IllegalStateException()
        val currentDate = "${cal.get(Calendar.DAY_OF_MONTH)}.${cal.get(Calendar.MONTH) + 1}"
        val needToCongratulate = mutableListOf<String>()
        for (profile in profiles) {
            var date: String = profile.bdate ?: continue
            date = date.split(".").subList(0, 2).joinToString(separator = ".")
            if (date == currentDate) {
                needToCongratulate.add("@${profile.domain}")
            }
        }
        if (needToCongratulate.size >= 1) {
            val message = when (needToCongratulate.size) {
                1 -> """

                    üéÅüéÅüéÅ–í—Å—è –ø–∞—Ä—Ç–∏—è –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∏—â–∞ ${needToCongratulate[0]} c –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è!!!
                    –ñ–µ–ª–∞–µ–º –µ–º—É –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ —Ç–∞–∫–æ–≥–æ –∂–µ —É–ø–æ—Ä—Å—Ç–≤–∞ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –Ω–∞—à–µ–π –í–µ–ª–∏–∫–æ–π –ü–∞—Ä—Ç–∏–∏!üéâüéâüéâ
                """.trimIndent()
                else -> """

                    üéÅüéÅüéÅ–í—Å—è –ø–∞—Ä—Ç–∏—è –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–∏—â–µ–π ${needToCongratulate.joinToString(separator = ", ")} c –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è!!!
                    –ñ–µ–ª–∞–µ–º –∏–º –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ —Ç–∞–∫–æ–≥–æ –∂–µ —É–ø–æ—Ä—Å—Ç–≤–∞ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –Ω–∞—à–µ–π –í–µ–ª–∏–∫–æ–π –ü–∞—Ä—Ç–∏–∏!üéâüéâüéâ
                """.trimIndent()
            }
            chatIds.forEach { VkPlatform.send(message, it) }
        }
    }
}